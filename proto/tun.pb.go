// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tun.proto

package pbtun

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StreamPayload struct {
	Body                 []byte   `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamPayload) Reset()         { *m = StreamPayload{} }
func (m *StreamPayload) String() string { return proto.CompactTextString(m) }
func (*StreamPayload) ProtoMessage()    {}
func (*StreamPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_220b8e1316da66ba, []int{0}
}

func (m *StreamPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamPayload.Unmarshal(m, b)
}
func (m *StreamPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamPayload.Marshal(b, m, deterministic)
}
func (m *StreamPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamPayload.Merge(m, src)
}
func (m *StreamPayload) XXX_Size() int {
	return xxx_messageInfo_StreamPayload.Size(m)
}
func (m *StreamPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamPayload.DiscardUnknown(m)
}

var xxx_messageInfo_StreamPayload proto.InternalMessageInfo

func (m *StreamPayload) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type RegisterRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_220b8e1316da66ba, []int{1}
}

func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (m *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(m, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CloseRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseRequest) Reset()         { *m = CloseRequest{} }
func (m *CloseRequest) String() string { return proto.CompactTextString(m) }
func (*CloseRequest) ProtoMessage()    {}
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_220b8e1316da66ba, []int{2}
}

func (m *CloseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseRequest.Unmarshal(m, b)
}
func (m *CloseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseRequest.Marshal(b, m, deterministic)
}
func (m *CloseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseRequest.Merge(m, src)
}
func (m *CloseRequest) XXX_Size() int {
	return xxx_messageInfo_CloseRequest.Size(m)
}
func (m *CloseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloseRequest proto.InternalMessageInfo

type MessageToServer struct {
	// Types that are valid to be assigned to MessageBody:
	//	*MessageToServer_Payload
	//	*MessageToServer_RegisterRequest
	//	*MessageToServer_CloseRequest
	MessageBody          isMessageToServer_MessageBody `protobuf_oneof:"MessageBody"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *MessageToServer) Reset()         { *m = MessageToServer{} }
func (m *MessageToServer) String() string { return proto.CompactTextString(m) }
func (*MessageToServer) ProtoMessage()    {}
func (*MessageToServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_220b8e1316da66ba, []int{3}
}

func (m *MessageToServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageToServer.Unmarshal(m, b)
}
func (m *MessageToServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageToServer.Marshal(b, m, deterministic)
}
func (m *MessageToServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageToServer.Merge(m, src)
}
func (m *MessageToServer) XXX_Size() int {
	return xxx_messageInfo_MessageToServer.Size(m)
}
func (m *MessageToServer) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageToServer.DiscardUnknown(m)
}

var xxx_messageInfo_MessageToServer proto.InternalMessageInfo

type isMessageToServer_MessageBody interface {
	isMessageToServer_MessageBody()
}

type MessageToServer_Payload struct {
	Payload *StreamPayload `protobuf:"bytes,1,opt,name=payload,proto3,oneof"`
}

type MessageToServer_RegisterRequest struct {
	RegisterRequest *RegisterRequest `protobuf:"bytes,2,opt,name=register_request,json=registerRequest,proto3,oneof"`
}

type MessageToServer_CloseRequest struct {
	CloseRequest *CloseRequest `protobuf:"bytes,3,opt,name=close_request,json=closeRequest,proto3,oneof"`
}

func (*MessageToServer_Payload) isMessageToServer_MessageBody() {}

func (*MessageToServer_RegisterRequest) isMessageToServer_MessageBody() {}

func (*MessageToServer_CloseRequest) isMessageToServer_MessageBody() {}

func (m *MessageToServer) GetMessageBody() isMessageToServer_MessageBody {
	if m != nil {
		return m.MessageBody
	}
	return nil
}

func (m *MessageToServer) GetPayload() *StreamPayload {
	if x, ok := m.GetMessageBody().(*MessageToServer_Payload); ok {
		return x.Payload
	}
	return nil
}

func (m *MessageToServer) GetRegisterRequest() *RegisterRequest {
	if x, ok := m.GetMessageBody().(*MessageToServer_RegisterRequest); ok {
		return x.RegisterRequest
	}
	return nil
}

func (m *MessageToServer) GetCloseRequest() *CloseRequest {
	if x, ok := m.GetMessageBody().(*MessageToServer_CloseRequest); ok {
		return x.CloseRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MessageToServer) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MessageToServer_Payload)(nil),
		(*MessageToServer_RegisterRequest)(nil),
		(*MessageToServer_CloseRequest)(nil),
	}
}

type MessageFromServer struct {
	// Types that are valid to be assigned to MessageBody:
	//	*MessageFromServer_Payload
	//	*MessageFromServer_RegisterRequest
	//	*MessageFromServer_CloseRequest
	MessageBody          isMessageFromServer_MessageBody `protobuf_oneof:"MessageBody"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *MessageFromServer) Reset()         { *m = MessageFromServer{} }
func (m *MessageFromServer) String() string { return proto.CompactTextString(m) }
func (*MessageFromServer) ProtoMessage()    {}
func (*MessageFromServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_220b8e1316da66ba, []int{4}
}

func (m *MessageFromServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageFromServer.Unmarshal(m, b)
}
func (m *MessageFromServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageFromServer.Marshal(b, m, deterministic)
}
func (m *MessageFromServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageFromServer.Merge(m, src)
}
func (m *MessageFromServer) XXX_Size() int {
	return xxx_messageInfo_MessageFromServer.Size(m)
}
func (m *MessageFromServer) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageFromServer.DiscardUnknown(m)
}

var xxx_messageInfo_MessageFromServer proto.InternalMessageInfo

type isMessageFromServer_MessageBody interface {
	isMessageFromServer_MessageBody()
}

type MessageFromServer_Payload struct {
	Payload *StreamPayload `protobuf:"bytes,1,opt,name=payload,proto3,oneof"`
}

type MessageFromServer_RegisterRequest struct {
	RegisterRequest *RegisterRequest `protobuf:"bytes,2,opt,name=register_request,json=registerRequest,proto3,oneof"`
}

type MessageFromServer_CloseRequest struct {
	CloseRequest *CloseRequest `protobuf:"bytes,3,opt,name=close_request,json=closeRequest,proto3,oneof"`
}

func (*MessageFromServer_Payload) isMessageFromServer_MessageBody() {}

func (*MessageFromServer_RegisterRequest) isMessageFromServer_MessageBody() {}

func (*MessageFromServer_CloseRequest) isMessageFromServer_MessageBody() {}

func (m *MessageFromServer) GetMessageBody() isMessageFromServer_MessageBody {
	if m != nil {
		return m.MessageBody
	}
	return nil
}

func (m *MessageFromServer) GetPayload() *StreamPayload {
	if x, ok := m.GetMessageBody().(*MessageFromServer_Payload); ok {
		return x.Payload
	}
	return nil
}

func (m *MessageFromServer) GetRegisterRequest() *RegisterRequest {
	if x, ok := m.GetMessageBody().(*MessageFromServer_RegisterRequest); ok {
		return x.RegisterRequest
	}
	return nil
}

func (m *MessageFromServer) GetCloseRequest() *CloseRequest {
	if x, ok := m.GetMessageBody().(*MessageFromServer_CloseRequest); ok {
		return x.CloseRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MessageFromServer) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MessageFromServer_Payload)(nil),
		(*MessageFromServer_RegisterRequest)(nil),
		(*MessageFromServer_CloseRequest)(nil),
	}
}

func init() {
	proto.RegisterType((*StreamPayload)(nil), "pbtun.StreamPayload")
	proto.RegisterType((*RegisterRequest)(nil), "pbtun.RegisterRequest")
	proto.RegisterType((*CloseRequest)(nil), "pbtun.CloseRequest")
	proto.RegisterType((*MessageToServer)(nil), "pbtun.MessageToServer")
	proto.RegisterType((*MessageFromServer)(nil), "pbtun.MessageFromServer")
}

func init() { proto.RegisterFile("tun.proto", fileDescriptor_220b8e1316da66ba) }

var fileDescriptor_220b8e1316da66ba = []byte{
	// 278 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x92, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0xb3, 0xfe, 0xa9, 0x74, 0x9a, 0x18, 0x5d, 0x45, 0x82, 0x27, 0x89, 0x08, 0x3d, 0x85,
	0x52, 0x6f, 0x1e, 0x3c, 0xb4, 0x20, 0xb9, 0x88, 0xb2, 0xed, 0x5d, 0x36, 0xe9, 0x50, 0x0a, 0xc9,
	0x6e, 0xdc, 0xdd, 0x08, 0x7d, 0x4e, 0xf1, 0x7d, 0x24, 0x9b, 0xad, 0x36, 0x79, 0x84, 0xde, 0x66,
	0x86, 0x6f, 0xbe, 0xf9, 0xcd, 0xec, 0xc2, 0xd0, 0xd4, 0x22, 0xa9, 0x94, 0x34, 0x92, 0x9e, 0x56,
	0x99, 0xa9, 0x45, 0x7c, 0x0f, 0xc1, 0xc2, 0x28, 0xe4, 0xe5, 0x3b, 0xdf, 0x16, 0x92, 0xaf, 0x28,
	0x85, 0x93, 0x4c, 0xae, 0xb6, 0x11, 0xb9, 0x23, 0x63, 0x9f, 0xd9, 0x38, 0x7e, 0x80, 0x90, 0xe1,
	0x7a, 0xa3, 0x0d, 0x2a, 0x86, 0x9f, 0x35, 0x6a, 0xd3, 0xc8, 0x04, 0x2f, 0xd1, 0xca, 0x86, 0xcc,
	0xc6, 0xf1, 0x39, 0xf8, 0xf3, 0x42, 0x6a, 0x74, 0x9a, 0xf8, 0x9b, 0x40, 0xf8, 0x8a, 0x5a, 0xf3,
	0x35, 0x2e, 0xe5, 0x02, 0xd5, 0x17, 0x2a, 0x3a, 0x81, 0xb3, 0xaa, 0x9d, 0x64, 0x5b, 0x47, 0xd3,
	0xeb, 0xc4, 0x82, 0x24, 0x1d, 0x8a, 0xd4, 0x63, 0x3b, 0x19, 0x9d, 0xc3, 0x85, 0x72, 0xc3, 0x3f,
	0x54, 0xeb, 0x1c, 0x1d, 0xd9, 0xd6, 0x1b, 0xd7, 0xda, 0x63, 0x4b, 0x3d, 0x16, 0xaa, 0x1e, 0xee,
	0x13, 0x04, 0x79, 0x83, 0xf6, 0xe7, 0x70, 0x6c, 0x1d, 0xae, 0x9c, 0xc3, 0x3e, 0x76, 0xea, 0x31,
	0x3f, 0xdf, 0xcb, 0x67, 0x01, 0x8c, 0xdc, 0x16, 0xb3, 0xe6, 0x18, 0x3f, 0x04, 0x2e, 0x5d, 0xfe,
	0xa2, 0x64, 0x79, 0x28, 0x7b, 0x4d, 0xdf, 0x20, 0x58, 0xd6, 0x42, 0x60, 0xd1, 0x6c, 0xb4, 0xc9,
	0x91, 0x3e, 0xc3, 0xa0, 0x2d, 0xd0, 0x1d, 0x50, 0xef, 0x31, 0x6f, 0xa3, 0x6e, 0xfd, 0xff, 0x1c,
	0x63, 0x32, 0x21, 0xd9, 0xc0, 0x7e, 0xb4, 0xc7, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xcb, 0xa7,
	0xe6, 0xbd, 0x75, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TunnelServiceClient is the client API for TunnelService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TunnelServiceClient interface {
	Tunnel(ctx context.Context, opts ...grpc.CallOption) (TunnelService_TunnelClient, error)
}

type tunnelServiceClient struct {
	cc *grpc.ClientConn
}

func NewTunnelServiceClient(cc *grpc.ClientConn) TunnelServiceClient {
	return &tunnelServiceClient{cc}
}

func (c *tunnelServiceClient) Tunnel(ctx context.Context, opts ...grpc.CallOption) (TunnelService_TunnelClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TunnelService_serviceDesc.Streams[0], "/pbtun.TunnelService/Tunnel", opts...)
	if err != nil {
		return nil, err
	}
	x := &tunnelServiceTunnelClient{stream}
	return x, nil
}

type TunnelService_TunnelClient interface {
	Send(*MessageToServer) error
	Recv() (*MessageFromServer, error)
	grpc.ClientStream
}

type tunnelServiceTunnelClient struct {
	grpc.ClientStream
}

func (x *tunnelServiceTunnelClient) Send(m *MessageToServer) error {
	return x.ClientStream.SendMsg(m)
}

func (x *tunnelServiceTunnelClient) Recv() (*MessageFromServer, error) {
	m := new(MessageFromServer)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TunnelServiceServer is the server API for TunnelService service.
type TunnelServiceServer interface {
	Tunnel(TunnelService_TunnelServer) error
}

// UnimplementedTunnelServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTunnelServiceServer struct {
}

func (*UnimplementedTunnelServiceServer) Tunnel(srv TunnelService_TunnelServer) error {
	return status.Errorf(codes.Unimplemented, "method Tunnel not implemented")
}

func RegisterTunnelServiceServer(s *grpc.Server, srv TunnelServiceServer) {
	s.RegisterService(&_TunnelService_serviceDesc, srv)
}

func _TunnelService_Tunnel_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TunnelServiceServer).Tunnel(&tunnelServiceTunnelServer{stream})
}

type TunnelService_TunnelServer interface {
	Send(*MessageFromServer) error
	Recv() (*MessageToServer, error)
	grpc.ServerStream
}

type tunnelServiceTunnelServer struct {
	grpc.ServerStream
}

func (x *tunnelServiceTunnelServer) Send(m *MessageFromServer) error {
	return x.ServerStream.SendMsg(m)
}

func (x *tunnelServiceTunnelServer) Recv() (*MessageToServer, error) {
	m := new(MessageToServer)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _TunnelService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pbtun.TunnelService",
	HandlerType: (*TunnelServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Tunnel",
			Handler:       _TunnelService_Tunnel_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "tun.proto",
}
